#import <Foundation/Foundation.h>
#import "SQCCaptureTransactionResponse.h"
#import "SQCChargeResponse.h"
#import "SQCChargeRequest.h"
#import "SQCListTransactionsResponse.h"
#import "SQCRetrieveTransactionResponse.h"
#import "SQCVoidTransactionResponse.h"
#import "SQCApi.h"

/**
* Square Connect API
* No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SQCTransactionApi: NSObject <SQCApi>

extern NSString* kSQCTransactionApiErrorDomain;
extern NSInteger kSQCTransactionApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// CaptureTransaction
/// Captures a transaction that was created with the **Charge** endpoint with a `delay_capture` value of `true`.
///
/// @param authorization The value to provide in the Authorization header of your request. This value should follow the format &#x60;Bearer YOUR_ACCESS_TOKEN_HERE&#x60;.
/// @param locationId 
/// @param transactionId 
/// 
///  code:200 message:"Success"
///
/// @return SQCCaptureTransactionResponse*
-(NSNumber*) captureTransactionWithAuthorization: (NSString*) authorization
    locationId: (NSString*) locationId
    transactionId: (NSString*) transactionId
    completionHandler: (void (^)(SQCCaptureTransactionResponse* output, NSError* error)) handler;


/// Charge
/// Charges a card represented by a token.
///
/// @param authorization The value to provide in the Authorization header of your request. This value should follow the format &#x60;Bearer YOUR_ACCESS_TOKEN_HERE&#x60;.
/// @param locationId The ID of the location to associate the transaction with.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCChargeResponse*
-(NSNumber*) chargeWithAuthorization: (NSString*) authorization
    locationId: (NSString*) locationId
    body: (SQCChargeRequest*) body
    completionHandler: (void (^)(SQCChargeResponse* output, NSError* error)) handler;


/// ListTransactions
/// Lists transactions for a particular location.  When making a request to this endpoint, your request body **must** include either the `cursor` parameter, or it must include both `begin_time` and `end_time` with an optional `sort_order`.
///
/// @param authorization The value to provide in the Authorization header of your request. This value should follow the format &#x60;Bearer YOUR_ACCESS_TOKEN_HERE&#x60;.
/// @param locationId The ID of the location to list transactions for.
/// @param beginTime The beginning of the requested reporting period, in RFC 3339 format. (optional)
/// @param endTime The end of the requested reporting period, in RFC 3339 format. (optional)
/// @param sortOrder The order in which results are listed in the response (&#x60;ASC&#x60; for chronological, &#x60;DESC&#x60; for reverse-chronological). (optional)
/// @param cursor A pagination cursor to retrieve the next set of results for your original query to the endpoint. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQCListTransactionsResponse*
-(NSNumber*) listTransactionsWithAuthorization: (NSString*) authorization
    locationId: (NSString*) locationId
    beginTime: (NSString*) beginTime
    endTime: (NSString*) endTime
    sortOrder: (NSString*) sortOrder
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQCListTransactionsResponse* output, NSError* error)) handler;


/// RetrieveTransaction
/// Retrieves details for a single transaction.
///
/// @param authorization The value to provide in the Authorization header of your request. This value should follow the format &#x60;Bearer YOUR_ACCESS_TOKEN_HERE&#x60;.
/// @param locationId 
/// @param transactionId 
/// 
///  code:200 message:"Success"
///
/// @return SQCRetrieveTransactionResponse*
-(NSNumber*) retrieveTransactionWithAuthorization: (NSString*) authorization
    locationId: (NSString*) locationId
    transactionId: (NSString*) transactionId
    completionHandler: (void (^)(SQCRetrieveTransactionResponse* output, NSError* error)) handler;


/// VoidTransaction
/// Cancels a transaction that was created with the **Charge** endpoint with a `delay_capture` value of `true`.
///
/// @param authorization The value to provide in the Authorization header of your request. This value should follow the format &#x60;Bearer YOUR_ACCESS_TOKEN_HERE&#x60;.
/// @param locationId 
/// @param transactionId 
/// 
///  code:200 message:"Success"
///
/// @return SQCVoidTransactionResponse*
-(NSNumber*) voidTransactionWithAuthorization: (NSString*) authorization
    locationId: (NSString*) locationId
    transactionId: (NSString*) transactionId
    completionHandler: (void (^)(SQCVoidTransactionResponse* output, NSError* error)) handler;



@end
