#import <Foundation/Foundation.h>
#import "SCObject.h"

/**
* Square Connect API
* No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

#import "SCAddress.h"
#import "SCMoney.h"


@protocol SCChargeRequest
@end

@interface SCChargeRequest : SCObject

/* A value you specify that uniquely identifies this transaction among transactions you've created.  If you're unsure whether a particular transaction succeeded, you can reattempt it with the same idempotency key without worrying about double-charging the buyer. Note that *all other fields* must also remain identical in your followup request, or an error will occur. 
 */
@property(nonatomic) NSString* idempotencyKey;
/* The amount of money to collect in the transaction. 
 */
@property(nonatomic) SCMoney* amountMoney;
/* A nonce representing the credit card to charge for this transaction. Do not provide a value for this field if you provide a value for `customer_card_id`. [optional]
 */
@property(nonatomic) NSString* cardNonce;
/* The ID of the customer card on file to charge for this transaction. Do not provide a value for this field if you provide a value for `card_nonce`. [optional]
 */
@property(nonatomic) NSString* customerCardId;
/* If `true`, the request will only perform an Auth on the provided card. You can then later perform either a Capture (with the *CaptureTransaction** endpoint) or a Void (with the **VoidTransation** endpoint. [optional]
 */
@property(nonatomic) NSNumber* delayCapture;
/* An optional ID you can associate with the transaction for your own purposes (such as to associate the transaction with an entity ID in your own database). [optional]
 */
@property(nonatomic) NSString* referenceId;
/* An optional note to associate with the transaction. [optional]
 */
@property(nonatomic) NSString* note;
/* The ID of the customer to associate this transaction with. This field is required if you provide a value for `customer_card_id`, and optional otherwise. [optional]
 */
@property(nonatomic) NSString* customerId;
/* If available, Postal code in the billing address for US and Canada payments may reduce decline rate. [optional]
 */
@property(nonatomic) SCAddress* billingAddress;
/*  [optional]
 */
@property(nonatomic) SCAddress* shippingAddress;

@end
